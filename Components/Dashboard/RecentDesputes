import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Skeleton } from "@/components/ui/skeleton";
import { 
  AlertTriangle, 
  Clock, 
  CheckCircle, 
  Eye,
  ArrowRight,
  User
} from "lucide-react";
import { format } from "date-fns";
import { motion, AnimatePresence } from "framer-motion";

const statusConfig = {
  submitted: { 
    color: "bg-blue-100 text-blue-700 border-blue-200", 
    icon: AlertTriangle 
  },
  under_review: { 
    color: "bg-amber-100 text-amber-700 border-amber-200", 
    icon: Clock 
  },
  investigating: { 
    color: "bg-purple-100 text-purple-700 border-purple-200", 
    icon: Eye 
  },
  waiting_customer: { 
    color: "bg-orange-100 text-orange-700 border-orange-200", 
    icon: User 
  },
  resolved: { 
    color: "bg-emerald-100 text-emerald-700 border-emerald-200", 
    icon: CheckCircle 
  },
  closed: { 
    color: "bg-slate-100 text-slate-700 border-slate-200", 
    icon: CheckCircle 
  }
};

const priorityConfig = {
  low: "bg-slate-100 text-slate-600",
  medium: "bg-blue-100 text-blue-700",
  high: "bg-amber-100 text-amber-700",
  urgent: "bg-red-100 text-red-700"
};

export default function RecentDisputes({ 
  disputes, 
  isLoading, 
  onSelectDispute, 
  onUpdateStatus 
}) {
  if (isLoading) {
    return (
      <Card className="shadow-lg border-slate-200/60">
        <CardHeader>
          <CardTitle>Recent Disputes</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          {Array(5).fill(0).map((_, i) => (
            <div key={i} className="flex items-center justify-between p-4 border rounded-lg">
              <div className="flex items-center gap-4">
                <Skeleton className="w-10 h-10 rounded-full" />
                <div className="space-y-2">
                  <Skeleton className="h-4 w-32" />
                  <Skeleton className="h-3 w-24" />
                </div>
              </div>
              <Skeleton className="h-6 w-16 rounded-full" />
            </div>
          ))}
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="shadow-lg border-slate-200/60 bg-white/80 backdrop-blur-sm">
      <CardHeader className="border-b border-slate-100">
        <div className="flex items-center justify-between">
          <CardTitle className="text-xl font-bold text-slate-900">
            Recent Disputes
          </CardTitle>
          <Badge variant="outline" className="bg-slate-50">
            {disputes.length} total
          </Badge>
        </div>
      </CardHeader>
      
      <CardContent className="p-0">
        <div className="max-h-96 overflow-y-auto">
          <AnimatePresence>
            {disputes.slice(0, 8).map((dispute, index) => {
              const StatusIcon = statusConfig[dispute.status]?.icon || AlertTriangle;
              
              return (
                <motion.div
                  key={dispute.id}
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: index * 0.05 }}
                  className="p-4 border-b border-slate-100 hover:bg-slate-50/80 transition-all duration-200 cursor-pointer group"
                  onClick={() => onSelectDispute(dispute)}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-4">
                      <div className={`p-2 rounded-lg ${statusConfig[dispute.status]?.color.split(' ')[0]} bg-opacity-20`}>
                        <StatusIcon className="w-5 h-5" />
                      </div>
                      
                      <div className="space-y-1">
                        <div className="flex items-center gap-2">
                          <p className="font-semibold text-slate-900 group-hover:text-blue-700 transition-colors">
                            {dispute.customer_name}
                          </p>
                          <Badge className={`text-xs ${priorityConfig[dispute.priority]} border`}>
                            {dispute.priority}
                          </Badge>
                        </div>
                        
                        <div className="flex items-center gap-3 text-sm text-slate-600">
                          <span>#{dispute.dispute_id}</span>
                          <span>•</span>
                          <span>{dispute.dispute_type.replace(/_/g, ' ')}</span>
                          <span>•</span>
                          <span>{format(new Date(dispute.created_date), 'MMM d, HH:mm')}</span>
                        </div>
                        
                        {dispute.amount && (
                          <p className="text-sm font-medium text-slate-700">
                            Amount: ${dispute.amount.toFixed(2)}
                          </p>
                        )}
                      </div>
                    </div>
                    
                    <div className="flex items-center gap-3">
                      <Badge className={`${statusConfig[dispute.status]?.color} border`}>
                        {dispute.status.replace(/_/g, ' ')}
                      </Badge>
                      
                      <ArrowRight className="w-4 h-4 text-slate-400 group-hover:text-blue-600 transition-colors" />
                    </div>
                  </div>
                </motion.div>
              );
            })}
          </AnimatePresence>
        </div>
      </CardContent>
    </Card>
  );
}
